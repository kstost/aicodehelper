{
  "name": "aicodehelper",
  "displayName": "AICodeHelper",
  "description": "AI-based coding assistant",
  "version": "0.0.101",
  "engines": {
    "vscode": "^1.60.0"
  },
  "publisher": "Kimseungtae",
  "categories": [
    "Programming Languages",
    "Machine Learning",
    "Other"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/kstost/aicodehelper.git"
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./extension.js",
  "icon": "images/icon.png",
  "contributes": {
    "media": {
      "encoder.json": "assets/encoder.json",
      "vocab.bpe": "assets/vocab.bpe"
    },
    "configuration": {
      "type": "object",
      "title": "AICodeHelper Configuration",
      "properties": {
        "aicodehelper.debugprompt": {
          "type": "string",
          "default": "```{{newline}}{{selectedcode}}{{newline}}```{{newline}}{{newline}}INPUT FOR REQUEST: fenced Code Block{{newline}}REQUEST: Debug the code {{newline}}INSTRUCTIONS:{{newline}}- Response only the debugged code without any other explanations, annotations, comments, descriptions.{{newline}}- Remove pre-text and post-text.",
          "description": "This is the prompt template used for debugging\n코드의 오류 수정을 위해 사용되는 프롬프트 템플릿입니다\nShortcut key: (Ctrl+Alt+Shift+D)"
        },
        "aicodehelper.namingprompt": {
          "type": "string",
          "default": "```{{newline}}{{selectedcode}}{{newline}}```{{newline}}{{newline}}INPUT FOR REQUEST: fenced Code Block{{newline}}REQUEST: Suggest good variable names for the code and replace them in code to suggested names{{newline}}INSTRUCTIONS:{{newline}}- Response only the replaced code without any other explanations, annotations, comments, descriptions.{{newline}}- Remove pre-text and post-text.",
          "description": "This is the prompt template used for naming variables\n변수이름 작명을 위해 사용되는 프롬프트 템플릿입니다\nShortcut key: (Ctrl+Alt+Shift+N)"
        },
        "aicodehelper.codereviewprompt": {
          "type": "string",
          "default": "```{{newline}}{{selectedcode}}{{newline}}```{{newline}}{{newline}}review this code.{{newline}}explain the good part and the bad part in {{language}}.{{newline}}don't include the original code in your explanation.",
          "description": "This is the prompt template used for a code review\n코드리뷰를 위해 사용되는 프롬프트 템플릿입니다\nShortcut key: (Ctrl+Alt+Shift+C)"
        },
        "aicodehelper.refactoringprompt": {
          "type": "string",
          "default": "```{{newline}}{{selectedcode}}{{newline}}```{{newline}}{{newline}}INPUT FOR REQUEST: fenced Code Block{{newline}}REQUEST: Refactor the code short without changing algorithm.{{newline}}INSTRUCTIONS:{{newline}}- Response only the refactored code without any other explanations, annotations, comments, descriptions.{{newline}}- Remove pre-text and post-text.",
          "description": "This is the prompt template used for code refactoring\n코드리팩토링을 위해 사용되는 프롬프트 템플릿입니다\nShortcut key: (Ctrl+Alt+Shift+R)"
        },
        "aicodehelper.commmentingprompt": {
          "type": "string",
          "default": "```{{newline}}{{selectedcode}}{{newline}}```{{newline}}{{newline}}INPUT FOR REQUEST: fenced Code Block{{newline}}REQUEST: Add comment line by line in this code.{{newline}}INSTRUCTIONS:{{newline}}- Don't modification or removal the original code.{{newline}}- Write comments in {{language}}.{{newline}}- Response only the original source code with added comment.{{newline}}- Remove pre-text and post-text.{{newline}}- No any other explanations, annotations, comments, descriptions outside of the code.",
          "description": "This is the prompt template used for adding code comments\n코드주석달기기능을 위해 사용되는 프롬프트 템플릿입니다\nShortcut key: (Ctrl+Alt+Shift+Z)"
        },
        "aicodehelper.generatingprompt": {
          "type": "string",
          "default": "DESCRIPTION:{{newline}}{{selectedcode}}.{{newline}}{{newline}}REQUEST:{{newline}}Make a code as DESCRIPTION in {{languageId}} syntax.{{newline}}{{newline}}INSTRUCTIONS:{{newline}}- Add comment line by line in the code.{{newline}}- Write comments in {{language}}.{{newline}}- Response only the made code with added comment.{{newline}}- Do not response any other explanations, annotations, comments, descriptions except inside the code.{{newline}}- Remove pre-text and post-text.",
          "description": "This is a prompt template for generating code based on a description of what you want to create in code\n코드로 만들고싶은것에 대한 묘사를 기반으로 하여 코드를 생성해내는 기능을 위한 프롬프트 템플릿입니다\nShortcut key: (Ctrl+Alt+Shift+G)"
        },
        "aicodehelper.APIKey": {
          "type": "boolean",
          "default": false,
          "description": "Please enter your API Key into the input box that appears by pressing the shortcut key (Ctrl+Alt+Shift+Q)\n단축키(Ctrl+Alt+Shift+Q)를 눌러서 나오는 입력박스에 API Key를 입력해주세요"
        },
        "aicodehelper.codeDiff": {
          "type": "boolean",
          "default": false,
          "description": "Use a function that allows you to check the content suggested by AI against the original code before applying it.\nAI에 의해 제안된 내용을 적용하기 전에 원래 코드와의 비교 확인 후 적용하도록 하는 기능을 사용합니다"
        },
        "aicodehelper.gptkey": {
          "type": "string",
          "default": "",
          "description": "No need to be set up. If you want to set your API key, please enter it into the input box that appears by pressing the shortcut key (Ctrl+Alt+Shift+Q).\n이 값은 설정할 필요 없습니다. APIKey를 설정하기 원한다면 단축키(Ctrl+Alt+Shift+Q)를 눌러서 나오는 입력박스에 API Key를 입력해주세요."
        },
        "aicodehelper.language": {
          "type": "string",
          "default": "english",
          "description": "What language would you like AI to use? (ex: english, korean, vietnamese)\nThis value replaces {{language}} in the prompt template. Therefore, it will not be applied when using the Asking AI feature (Ctrl+Alt+Shift+M, Ctrl+Alt+Shift+,) where a prompt template setting does not exist."
        },
        "aicodehelper.temperature": {
          "type": "string",
          "default": "0.8",
          "description": "Temperature 0~1 in float\nTemperature value will be applied when using the those features (Ctrl+Alt+Shift+M Ctrl+Alt+Shift+, Ctrl+Alt+Shift+.) where a prompt template setting does not exist."
        }
      }
    },
    "keybindings": [
      {
        "command": "aicodehelper.registAPIKey",
        "key": "ctrl+alt+shift+q",
        "mac": "ctrl+alt+shift+q",
        "when": "true"
      },
      {
        "command": "aicodehelper.resetEverything",
        "key": "ctrl+alt+shift+escape",
        "mac": "ctrl+alt+shift+escape",
        "when": "true"
      },
      {
        "command": "aicodehelper.resetPromptHistory",
        "key": "ctrl+alt+shift+`",
        "mac": "ctrl+alt+shift+`",
        "when": "true"
      },
      {
        "command": "aicodehelper.justAsking",
        "key": "ctrl+alt+shift+m",
        "mac": "ctrl+alt+shift+m",
        "when": "editorHasSelection || editorTextFocus"
      },
      {
        "command": "aicodehelper.recentHistoryOfAsking",
        "key": "ctrl+alt+shift+.",
        "mac": "ctrl+alt+shift+.",
        "when": "editorHasSelection || editorTextFocus"
      },
      {
        "command": "aicodehelper.recentHistoryOfCodingAsking",
        "key": "ctrl+alt+shift+l",
        "mac": "ctrl+alt+shift+l",
        "when": "editorHasSelection || editorTextFocus"
      },
      {
        "command": "aicodehelper.justInputAsking",
        "key": "ctrl+alt+shift+,",
        "mac": "ctrl+alt+shift+,",
        "when": "editorHasSelection || editorTextFocus"
      },
      {
        "command": "aicodehelper.justInputCodingAsking",
        "key": "ctrl+alt+shift+k",
        "mac": "ctrl+alt+shift+k",
        "when": "editorHasSelection || editorTextFocus"
      },
      {
        "command": "aicodehelper.generateCode",
        "key": "ctrl+alt+shift+g",
        "mac": "ctrl+alt+shift+g",
        "when": "editorHasSelection || editorTextFocus"
      },
      {
        "command": "aicodehelper.addComment",
        "key": "ctrl+alt+shift+z",
        "mac": "ctrl+alt+shift+z",
        "when": "editorHasSelection || editorTextFocus"
      },
      {
        "command": "aicodehelper.refactoring",
        "key": "ctrl+alt+shift+r",
        "mac": "ctrl+alt+shift+r",
        "when": "editorHasSelection || editorTextFocus"
      },
      {
        "command": "aicodehelper.codereview",
        "key": "ctrl+alt+shift+c",
        "mac": "ctrl+alt+shift+c",
        "when": "editorHasSelection || editorTextFocus"
      },
      {
        "command": "aicodehelper.naming",
        "key": "ctrl+alt+shift+n",
        "mac": "ctrl+alt+shift+n",
        "when": "editorHasSelection || editorTextFocus"
      },
      {
        "command": "aicodehelper.debugging",
        "key": "ctrl+alt+shift+d",
        "mac": "ctrl+alt+shift+d",
        "when": "editorHasSelection || editorTextFocus"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "aicodehelper.justAsking",
          "when": "editorHasSelection"
        },
        {
          "command": "aicodehelper.justInputAsking",
          "when": "editorHasSelection"
        },
        {
          "command": "aicodehelper.justInputCodingAsking",
          "when": "editorHasSelection"
        },
        {
          "command": "aicodehelper.recentHistoryOfAsking",
          "when": "editorHasSelection"
        },
        {
          "command": "aicodehelper.recentHistoryOfCodingAsking",
          "when": "editorHasSelection"
        },
        {
          "command": "aicodehelper.generateCode",
          "when": "editorHasSelection"
        },
        {
          "command": "aicodehelper.addComment",
          "when": "editorHasSelection"
        },
        {
          "command": "aicodehelper.refactoring",
          "when": "editorHasSelection"
        },
        {
          "command": "aicodehelper.codereview",
          "when": "editorHasSelection"
        },
        {
          "command": "aicodehelper.naming",
          "when": "editorHasSelection"
        },
        {
          "command": "aicodehelper.debugging",
          "when": "editorHasSelection"
        }
      ]
    },
    "commands": [
      {
        "command": "aicodehelper.registAPIKey",
        "title": "Setup API key"
      },
      {
        "command": "aicodehelper.justAsking",
        "title": "General Requests"
      },
      {
        "command": "aicodehelper.justInputAsking",
        "title": "General Requests with Inputbox"
      },
      {
        "command": "aicodehelper.justInputCodingAsking",
        "title": "Request to fix the code"
      },
      {
        "command": "aicodehelper.recentHistoryOfAsking",
        "title": "General Requests List"
      },
      {
        "command": "aicodehelper.recentHistoryOfCodingAsking",
        "title": "Request history to fix the code"
      },
      {
        "command": "aicodehelper.generateCode",
        "title": "Code Generating"
      },
      {
        "command": "aicodehelper.addComment",
        "title": "Adding comment to code"
      },
      {
        "command": "aicodehelper.refactoring",
        "title": "Refactoring code"
      },
      {
        "command": "aicodehelper.codereview",
        "title": "Code Review"
      },
      {
        "command": "aicodehelper.naming",
        "title": "Naming variables, functions, etc"
      },
      {
        "command": "aicodehelper.debugging",
        "title": "Debugging"
      }
    ]
  },
  "scripts": {
    "lint": "eslint .",
    "pretest": "npm run lint",
    "test": "node ./test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.60.0",
    "@vscode/test-electron": "^2.2.3",
    "eslint": "^8.34.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^4.9.5"
  },
  "dependencies": {
    "keytar": "^7.9.0",
    "node-fetch": "^2.6.9"
  }
}